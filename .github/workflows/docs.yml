name: Deploy Documentation to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Install dependencies
        run: |
          npm install -g docsify-cli
      
      - name: Build with Docsify
        run: |
          mkdir -p build
          cp -r docs/* build/
          echo '<!DOCTYPE html>
          <html>
          <head>
            <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
            <meta name="viewport" content="width=device-width,initial-scale=1">
            <meta charset="UTF-8">
            <title>Poly Micro Manager Documentation</title>
            <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/docsify@4/themes/vue.css">
          </head>
          <body>
            <div id="app"></div>
            <script>
              window.$docsify = {
                name: "Poly Micro Manager",
                repo: "siriknikita/poly-micro-frontend-demo",
                loadSidebar: true,
                subMaxLevel: 3,
                auto2top: true,
                homepage: "README.md",
              };
            </script>
            <script src="//cdn.jsdelivr.net/npm/docsify@4"></script>
            <script src="//cdn.jsdelivr.net/npm/prismjs@1/components/prism-typescript.min.js"></script>
            <script src="//cdn.jsdelivr.net/npm/prismjs@1/components/prism-bash.min.js"></script>
            <script src="//cdn.jsdelivr.net/npm/prismjs@1/components/prism-jsx.min.js"></script>
          </body>
          </html>' > build/index.html
          echo '* [Home](/)
          * [Authentication](/components/auth.md)
          * [Monitoring](/components/monitoring.md)
          * [Pipelining](/components/pipelining.md)
          * [Testing](/components/testing.md)
          * [Shared Components](/components/shared.md)
          * [Core Components](/components/core.md)
          * [Import Guide](/components/import-guide.md)' > build/_sidebar.md
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
