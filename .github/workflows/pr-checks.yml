name: PR Checks

on:
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  check-actor:
    name: Check PR Author
    runs-on: ubuntu-latest
    outputs:
      is_bot: ${{ steps.set.outputs.is_bot }}
    steps:
      - id: set
        run: |
          if [ "${{ github.actor }}" = "github-actions[bot]" ]; then
            echo "is_bot=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_bot=false" >> "$GITHUB_OUTPUT"
          fi

  # Main validation job
  validate:
    name: Validate PR
    needs: check-actor
    runs-on: ubuntu-latest
    if: needs.check-actor.outputs.is_bot != 'true'
    permissions:
      statuses: write
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Lint check (errors only)
        run: npm run lint:errors

      - name: Run tests
        run: npm test -- --run

  # Job that always succeeds for bot PRs to satisfy required checks
  bot-success:
    name: Auto-approve Bot PR
    needs: check-actor
    runs-on: ubuntu-latest
    if: needs.check-actor.outputs.is_bot == 'true'
    permissions:
      statuses: write
      checks: write
    steps:
      - name: Mark bot PR as validated
        run: |
          echo "Bot PR detected, reporting success for Validate PR."
          echo "::set-output name=check_name::Validate PR"
          echo "::set-output name=status::success"
          echo "::set-output name=conclusion::success"
      - name: Report status
        uses: actions/github-script@v6
        with:
          script: |
            const { check_name, status, conclusion } = core.outputs;
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.payload.pull_request.head.sha,
              name: check_name,
              status: status,
              conclusion: conclusion,
            });